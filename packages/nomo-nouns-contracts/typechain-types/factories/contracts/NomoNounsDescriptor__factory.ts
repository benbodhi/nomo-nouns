/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NomoNounsDescriptor,
  NomoNounsDescriptorInterface,
} from "../../contracts/NomoNounsDescriptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadPaletteLength",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPalette",
    type: "error",
  },
  {
    inputs: [],
    name: "IndexNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsArt",
        name: "art",
        type: "address",
      },
    ],
    name: "ArtUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "DataURIToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISVGRenderer",
        name: "renderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "accessories",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessoryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "art",
    outputs: [
      {
        internalType: "contract INounsArt",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "backgroundOverrides",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backgrounds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "bodies",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bodyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "genericDataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "getPartsForSeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "image",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "palette",
            type: "bytes",
          },
        ],
        internalType: "struct ISVGRenderer.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "glasses",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glassesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "heads",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDataURIEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "palettes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
    ],
    name: "setArt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_color",
        type: "string",
      },
    ],
    name: "setBackgroundOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleDataURIEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "unsetBackgroundOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200251d3803806200251d8339810160408190526200004791620000ed565b620000523362000084565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556200012c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000ea57600080fd5b50565b600080604083850312156200010157600080fd5b82516200010e81620000d4565b60208401519092506200012181620000d4565b809150509250929050565b6123e1806200013c6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637ca9421011610104578063bc2d45fe116100a2578063dfe8478b11610071578063dfe8478b1461042a578063e6b1a3ae14610432578063eba8180614610445578063f2fde38b1461044d57600080fd5b8063bc2d45fe146103c7578063be9570bd146103da578063cc2aa091146103ed578063ce2f4f53146103f557600080fd5b8063b8bed3b1116100de578063b8bed3b11461037b578063b982d1b91461038e578063bb145866146103a1578063bbf103ef146103b457600080fd5b80637ca942101461032a5780638ada6b0f1461033d5780638da5cb5b1461035d57600080fd5b80634daebac21161017c5780635a503f131161014b5780635a503f13146102f45780635b9968f9146103075780636c0360eb1461031a578063715018a61461032257600080fd5b80634daebac2146102b357806355f804b3146102bb57806356d3163d146102ce57806357c1bf01146102e157600080fd5b80634136a006116101b85780634136a0061461026d5780634479cef21461028257806344cee73c146102985780634531c0a8146102ab57600080fd5b806304bde4dd146101df57806315d6cde914610208578063301bd28e14610228575b600080fd5b6101f26101ed366004611830565b610460565b6040516101ff91906118a1565b60405180910390f35b61021b610216366004611a1c565b6105c0565b6040516101ff9190611a38565b6001546102489073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ff565b61028061027b366004611830565b61099f565b005b61028a6109c1565b6040519081526020016101ff565b6101f26102a6366004611830565b610a61565b61028a610afa565b61028a610b93565b6102806102c9366004611b24565b610c02565b6102806102dc366004611b88565b610c55565b6101f26102ef366004611ba5565b610cd7565b6101f2610302366004611830565b610d8b565b610280610315366004611bd2565b610de3565b6101f2610e0a565b610280610e98565b6101f2610338366004611830565b610eac565b6002546102489073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16610248565b6101f2610389366004611ba5565b610f04565b6101f261039c366004611830565b610f6e565b6101f26103af366004611830565b610fc6565b6101f26103c2366004611a1c565b610fdf565b6101f26103d5366004611c1e565b6110cd565b6101f26103e8366004611cbf565b611127565b61028a61123c565b60025461041a9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016101ff565b6102806112ab565b610280610440366004611b88565b61132f565b61028a6113aa565b61028061045b366004611b88565b611419565b600081815260046020526040902080546060919061047d90611d35565b9050600003610522576001546040517f04bde4dd0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff909116906304bde4dd90602401600060405180830381865afa1580156104f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051d9190810190611db8565b6105ba565b6000828152600460205260409020805461053b90611d35565b80601f016020809104026020016040519081016040528092919081815260200182805461056790611d35565b80156105b45780601f10610589576101008083540402835291602001916105b4565b820191906000526020600020905b81548152906001019060200180831161059757829003601f168201915b50505050505b92915050565b60015460408281015190517f44cee73c00000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015260609160009173ffffffffffffffffffffffffffffffffffffffff909116906344cee73c90602401600060405180830381865afa158015610641573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106699190810190611db8565b60015460608501516040517f7ca9421000000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690637ca9421090602401600060405180830381865afa1580156106ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107129190810190611db8565b60015460808601516040517f5a503f1300000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690635a503f1390602401600060405180830381865afa158015610793573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107bb9190810190611db8565b60015460a08701516040517fb982d1b900000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063b982d1b990602401600060405180830381865afa15801561083c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108649190810190611db8565b60408051600480825260a0820190925291925060009190816020015b604080518082019091526060808252602082015281526020019060019003908161088057905050905060405180604001604052808681526020016108c3876114d2565b815250816000815181106108d9576108d9611e09565b602002602001018190525060405180604001604052808581526020016108fe866114d2565b8152508160018151811061091457610914611e09565b60200260200101819052506040518060400160405280848152602001610939856114d2565b8152508160028151811061094f5761094f611e09565b60200260200101819052506040518060400160405280838152602001610974846114d2565b8152508160038151811061098a5761098a611e09565b60209081029190910101529695505050505050565b6109a761154c565b60008181526004602052604081206109be916117e2565b50565b600154604080517fe73dd383000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163e73dd38391600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a589190810190611e38565b60200151905090565b6001546040517f44cee73c0000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff16906344cee73c906024015b600060405180830381865afa158015610ad2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ba9190810190611db8565b600154604080517ffd30704b000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163fd30704b9160048083019260209291908290030181865afa158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190611f74565b905090565b600154604080517fc64b2f5d000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163c64b2f5d91600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b610c0a61154c565b6003610c17828483611fdc565b507f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad8282604051610c499291906120d9565b60405180910390a15050565b610c5d61154c565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f482cbbbcf912da3be80deb8503ae1e94c0b7d5d1d0ec0af3d9d6403e06e609ee906020015b60405180910390a150565b60606000610ce4846115cd565b9050600081604051602001610cf99190612108565b60405160208183030381529060405290506000604051602001610d65907f546865792077616e74656420746f206265636f6d652061204e6f756e2c20627581527f74206e6f77207468657920617265204e6f27204d6f2700000000000000000000602082015260360190565b6040516020818303038152906040529050610d81828287611127565b9695505050505050565b6001546040517f5a503f130000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff1690635a503f1390602401610ab5565b610deb61154c565b6000838152600460205260409020610e04828483611fdc565b50505050565b60038054610e1790611d35565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4390611d35565b8015610e905780601f10610e6557610100808354040283529160200191610e90565b820191906000526020600020905b815481529060010190602001808311610e7357829003601f168201915b505050505081565b610ea061154c565b610eaa600061168b565b565b6001546040517f7ca942100000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff1690637ca9421090602401610ab5565b60025460609074010000000000000000000000000000000000000000900460ff1615610f3b57610f348383610cd7565b90506105ba565b6003610f46846115cd565b604051602001610f5792919061214d565b604051602081830303815290604052905092915050565b6001546040517fb982d1b90000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff169063b982d1b990602401610ab5565b60046020526000908152604090208054610e1790611d35565b606060006040518060400160405280610ff7856105c0565b8152602001611010856020015164ffffffffff16610460565b90526002546040517f22cc1ad600000000000000000000000000000000000000000000000000000000815291925073__$898be40fe8843234b138800c5ed3fc0496$__916322cc1ad6916110819173ffffffffffffffffffffffffffffffffffffffff90911690859060040161226d565b600060405180830381865af415801561109e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110c69190810190611db8565b9392505050565b6001546040517fbc2d45fe00000000000000000000000000000000000000000000000000000000815260ff8316600482015260609173ffffffffffffffffffffffffffffffffffffffff169063bc2d45fe90602401610ab5565b606060006040518060a00160405280868152602001611150856000015164ffffffffff166115cd565b815260200185815260200161116f856020015164ffffffffff16610460565b815260200161117d856105c0565b90526002546040517f8873aaf600000000000000000000000000000000000000000000000000000000815291925073__$898be40fe8843234b138800c5ed3fc0496$__91638873aaf6916111ee9173ffffffffffffffffffffffffffffffffffffffff9091169085906004016122df565b600060405180830381865af415801561120b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112339190810190611db8565b95945050505050565b600154604080517f368013dc000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163368013dc91600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b6112b361154c565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116740100000000000000000000000000000000000000009182900460ff1615918202179091556040518181527f360c3d72ee193226275b842f85231c259c934e85459fed80fa68e502ffa9dbde90602001610ccc565b61133761154c565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f89382d75256b43b6826ad8d6cbd8e517eaf5e10f1ef4c8f123c9a25ac4529b5590602001610ccc565b600154604080517f222a36d0000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163222a36d091600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b61142161154c565b73ffffffffffffffffffffffffffffffffffffffff81166114c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6109be8161168b565b600154815160609173ffffffffffffffffffffffffffffffffffffffff169063bc2d45fe90849060009061150857611508611e09565b01602001516040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260f89190911c6004820152602401610ab5565b60005473ffffffffffffffffffffffffffffffffffffffff163314610eaa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016114c0565b606060006115da83611700565b600101905060008167ffffffffffffffff8111156115fa576115fa6118b4565b6040519080825280601f01601f191660200182016040528015611624576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461162e57509392505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611749577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611775576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061179357662386f26fc10000830492506010015b6305f5e10083106117ab576305f5e100830492506008015b61271083106117bf57612710830492506004015b606483106117d1576064830492506002015b600a83106105ba5760010192915050565b5080546117ee90611d35565b6000825580601f106117fe575050565b601f0160209004906000526020600020908101906109be91905b8082111561182c5760008155600101611818565b5090565b60006020828403121561184257600080fd5b5035919050565b60005b8381101561186457818101518382015260200161184c565b83811115610e045750506000910152565b6000815180845261188d816020860160208601611849565b601f01601f19169290920160200192915050565b6020815260006110c66020830184611875565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611906576119066118b4565b60405290565b6040516060810167ffffffffffffffff81118282101715611906576119066118b4565b604051601f8201601f1916810167ffffffffffffffff81118282101715611958576119586118b4565b604052919050565b803564ffffffffff8116811461197557600080fd5b919050565b600060c0828403121561198c57600080fd5b60405160c0810181811067ffffffffffffffff821117156119af576119af6118b4565b6040529050806119be83611960565b81526119cc60208401611960565b60208201526119dd60408401611960565b60408201526119ee60608401611960565b60608201526119ff60808401611960565b6080820152611a1060a08401611960565b60a08201525092915050565b600060c08284031215611a2e57600080fd5b6110c6838361197a565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611acd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc089840301855281518051878552611aa188860182611875565b91890151858303868b0152919050611ab98183611875565b968901969450505090860190600101611a5f565b509098975050505050505050565b60008083601f840112611aed57600080fd5b50813567ffffffffffffffff811115611b0557600080fd5b602083019150836020828501011115611b1d57600080fd5b9250929050565b60008060208385031215611b3757600080fd5b823567ffffffffffffffff811115611b4e57600080fd5b611b5a85828601611adb565b90969095509350505050565b73ffffffffffffffffffffffffffffffffffffffff811681146109be57600080fd5b600060208284031215611b9a57600080fd5b81356110c681611b66565b60008060e08385031215611bb857600080fd5b82359150611bc9846020850161197a565b90509250929050565b600080600060408486031215611be757600080fd5b83359250602084013567ffffffffffffffff811115611c0557600080fd5b611c1186828701611adb565b9497909650939450505050565b600060208284031215611c3057600080fd5b813560ff811681146110c657600080fd5b600067ffffffffffffffff821115611c5b57611c5b6118b4565b50601f01601f191660200190565b600082601f830112611c7a57600080fd5b8135611c8d611c8882611c41565b61192f565b818152846020838601011115611ca257600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006101008486031215611cd557600080fd5b833567ffffffffffffffff80821115611ced57600080fd5b611cf987838801611c69565b94506020860135915080821115611d0f57600080fd5b50611d1c86828701611c69565b925050611d2c856040860161197a565b90509250925092565b600181811c90821680611d4957607f821691505b602082108103611d82577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000611d96611c8884611c41565b9050828152838383011115611daa57600080fd5b6110c6836020830184611849565b600060208284031215611dca57600080fd5b815167ffffffffffffffff811115611de157600080fd5b8201601f81018413611df257600080fd5b611e0184825160208401611d88565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020808385031215611e4b57600080fd5b825167ffffffffffffffff80821115611e6357600080fd5b81850191506040808388031215611e7957600080fd5b611e816118e3565b835183811115611e9057600080fd5b8401601f81018913611ea157600080fd5b805184811115611eb357611eb36118b4565b611ec1878260051b0161192f565b8181528781019550606091820283018801918b831115611ee057600080fd5b928801925b82841015611f5b5780848d031215611efd5760008081fd5b611f0561190c565b845161ffff81168114611f185760008081fd5b8152848a015169ffffffffffffffffffff81168114611f375760008081fd5b818b015284870151611f4881611b66565b8188015287529588019592830192611ee5565b5083525050928401519383019390935250949350505050565b600060208284031215611f8657600080fd5b5051919050565b601f821115611fd757600081815260208120601f850160051c81016020861015611fb45750805b601f850160051c820191505b81811015611fd357828155600101611fc0565b5050505b505050565b67ffffffffffffffff831115611ff457611ff46118b4565b612008836120028354611d35565b83611f8d565b6000601f84116001811461205a57600085156120245750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556120d2565b600083815260209020601f19861690835b8281101561208b578685013582556020948501946001909201910161206b565b50868210156120c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b7f4e6f6d6f4e6f756e200000000000000000000000000000000000000000000000815260008251612140816009850160208701611849565b9190910160090192915050565b600080845461215b81611d35565b6001828116801561217357600181146121a6576121d5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00841687528215158302870194506121d5565b8860005260208060002060005b858110156121cc5781548a8201529084019082016121b3565b50505082870194505b5050505083516121e9818360208801611849565b01949350505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561226057828403895281516040815181875261223282880182611875565b9150508682015191508581038787015261224c8183611875565b9a87019a9550505090840190600101612210565b5091979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082516040808401526122a460808401826121f2565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152610d818282611875565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000825160a0604084015261231760e0840182611875565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0808584030160608601526123538383611875565b925060408601519150808584030160808601526123708383611875565b925060608601519150808584030160a086015261238d8383611875565b925060808601519150808584030160c086015250610d8182826121f256fea2646970667358221220b146837eedffaf97bc7e24ca8c71da85824a8f544157913622155554c265a28064736f6c634300080f0033";

type NomoNounsDescriptorConstructorParams =
  | [linkLibraryAddresses: NomoNounsDescriptorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NomoNounsDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NomoNounsDescriptor__factory extends ContractFactory {
  constructor(...args: NomoNounsDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NomoNounsDescriptor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: NomoNounsDescriptorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$898be40fe8843234b138800c5ed3fc0496\\$__", "g"),
      linkLibraryAddresses["contracts/NomoNFTDescriptor.sol:NomoNFTDescriptor"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _art: PromiseOrValue<string>,
    _renderer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NomoNounsDescriptor> {
    return super.deploy(
      _art,
      _renderer,
      overrides || {}
    ) as Promise<NomoNounsDescriptor>;
  }
  override getDeployTransaction(
    _art: PromiseOrValue<string>,
    _renderer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_art, _renderer, overrides || {});
  }
  override attach(address: string): NomoNounsDescriptor {
    return super.attach(address) as NomoNounsDescriptor;
  }
  override connect(signer: Signer): NomoNounsDescriptor__factory {
    return super.connect(signer) as NomoNounsDescriptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NomoNounsDescriptorInterface {
    return new utils.Interface(_abi) as NomoNounsDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NomoNounsDescriptor {
    return new Contract(address, _abi, signerOrProvider) as NomoNounsDescriptor;
  }
}

export interface NomoNounsDescriptorLibraryAddresses {
  ["contracts/NomoNFTDescriptor.sol:NomoNFTDescriptor"]: string;
}
